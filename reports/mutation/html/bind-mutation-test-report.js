document.querySelector('mutation-test-report-app').report = {"files":{"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/App.tsx":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":6},"start":{"column":23,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { RouteApp } from \"./RouteApp\";\n\nconst App: FC = () => {\n  return <RouteApp />;\n};\n\nexport default App;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/components/Elements/elements.stories.tsx":{"language":"typescript","mutants":[{"id":"3","location":{"end":{"column":20,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":26,"line":7},"start":{"column":15,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"5","location":{"end":{"column":2,"line":26},"start":{"column":31,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"6","location":{"end":{"column":26,"line":11},"start":{"column":20,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":34,"line":11},"start":{"column":28,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":2,"line":8},"start":{"column":16,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from \"react\";\nimport { Input, Textarea, Button, Name, Label } from \"./elements\";\nimport { withKnobs, text } from \"@storybook/addon-knobs\";\n\nexport default {\n  title: \"Elements\",\n  decorators: [withKnobs],\n};\n\nexport const elements = () => {\n  const str = text(\"user\", \"text\");\n  return (\n    <>\n      <div>Input</div>\n      <Input value={str} />\n      <div>Textarea</div>\n      <Textarea>{str}</Textarea>\n      <div>Button</div>\n      <Button>{str}</Button>\n      <div>Name</div>\n      <Name>{str}</Name>\n      <div>Label</div>\n      <Label>{str}</Label>\n    </>\n  );\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/components/Elements/elements.tsx":{"language":"typescript","mutants":[{"id":"8","location":{"end":{"column":2,"line":12},"start":{"column":34,"line":6}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"9","location":{"end":{"column":2,"line":20},"start":{"column":40,"line":14}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"10","location":{"end":{"column":2,"line":41},"start":{"column":36,"line":22}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"11","location":{"end":{"column":4,"line":40},"start":{"column":40,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"12","location":{"end":{"column":44,"line":37},"start":{"column":9,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"13","location":{"end":{"column":44,"line":37},"start":{"column":9,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"14","location":{"end":{"column":44,"line":37},"start":{"column":9,"line":37}},"mutatorName":"EqualityOperator","replacement":"props.status !== CheckState.loading","status":"Survived"},{"id":"15","location":{"end":{"column":6,"line":39},"start":{"column":46,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"16","location":{"end":{"column":74,"line":38},"start":{"column":14,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":2,"line":53},"start":{"column":34,"line":50}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"17","location":{"end":{"column":2,"line":48},"start":{"column":32,"line":43}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"20","location":{"end":{"column":2,"line":75},"start":{"column":31,"line":58}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"19","location":{"end":{"column":2,"line":57},"start":{"column":28,"line":55}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"21","location":{"end":{"column":4,"line":74},"start":{"column":38,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":40,"line":71},"start":{"column":9,"line":71}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"23","location":{"end":{"column":40,"line":71},"start":{"column":9,"line":71}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"24","location":{"end":{"column":40,"line":71},"start":{"column":9,"line":71}},"mutatorName":"EqualityOperator","replacement":"props.loading !== Loading.start","status":"Survived"},{"id":"25","location":{"end":{"column":6,"line":73},"start":{"column":42,"line":71}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":2,"line":80},"start":{"column":31,"line":77}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"26","location":{"end":{"column":60,"line":72},"start":{"column":14,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"28","location":{"end":{"column":2,"line":84},"start":{"column":35,"line":82}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"},{"id":"29","location":{"end":{"column":2,"line":88},"start":{"column":37,"line":85}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"}],"source":"import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { CheckState } from \"@auth/types\";\nimport { Loading } from \"@admin/Grammar/List/types\";\n\nexport const Input = styled.input`\n  padding: 12px 20px;\n  font-size: 16px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  font-weight: 900;\n`;\n\nexport const Textarea = styled.textarea`\n  padding: 12px 20px;\n  font-size: 16px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  font-weight: 900;\n`;\n\nexport const Button = styled.button`\n  padding: 12px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  background: #68ef68;\n  border: none;\n  border-radius: 5px;\n  text-transform: uppercase;\n  font-weight: 900;\n  margin: 5px;\n  &:hover {\n    transition: 0.5s;\n    background: #1be61b;\n  }\n  ${(props: { status: CheckState }) => {\n    if (props.status === CheckState.loading) {\n      return \"background: #eeeeee !important; color: #dddddd !important;\";\n    }\n  }};\n`;\n\nexport const Name = styled.span`\n  min-width: 100px;\n  min-width: 115px;\n  display: inline-flex;\n  font-size: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  margin: 5px 0;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n`;\nexport const Page = styled.div`\n  padding: 10px;\n  min-height: 200px;\n  flex: 1;\n  @keyframes uploading {\n    from {\n      background: #ffffff;\n    }\n    to {\n      background: #eeeeee;\n    }\n  }\n  ${(props: { loading: Loading }) => {\n    if (props.loading === Loading.start) {\n      return \"animation: uploading 1s infinite !important;\";\n    }\n  }}\n`;\n\nexport const Menu = styled.div`\n  width: 300px;\n  background: #eee;\n`;\n\nexport const MainPage = styled.div`\n  display: flex;\n`;\nexport const ListLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/RouteApp.tsx":{"language":"typescript","mutants":[{"id":"1","location":{"end":{"column":2,"line":20},"start":{"column":35,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport AuthPage from \"@auth/AuthPage\";\nimport AdminApp from \"@admin/AdminApp\";\n\nexport const RouteApp: FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          Index\n          <hr />\n          <Link to=\"/auth\">Админка</Link>\n        </Route>\n        <Route exact path=\"/auth\" component={AuthPage} />\n        <Route exact path=\"/admin\" component={AdminApp} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RouteApp;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/components/ErrorBoundary.tsx":{"language":"typescript","mutants":[{"id":"30","location":{"end":{"column":30,"line":12},"start":{"column":11,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"31","location":{"end":{"column":28,"line":12},"start":{"column":23,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"32","location":{"end":{"column":4,"line":16},"start":{"column":37,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"34","location":{"end":{"column":28,"line":15},"start":{"column":24,"line":15}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"33","location":{"end":{"column":30,"line":15},"start":{"column":12,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"35","location":{"end":{"column":4,"line":23},"start":{"column":12,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"37","location":{"end":{"column":28,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"36","location":{"end":{"column":28,"line":19},"start":{"column":9,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"38","location":{"end":{"column":6,"line":21},"start":{"column":30,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { Component, ReactNode } from \"react\";\n\nexport interface Props {\n  children: ReactNode;\n}\n\nexport interface State {\n  hasError: boolean;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  state = { hasError: false };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/components/PageElements/elements.tsx":{"language":"typescript","mutants":[{"id":"39","location":{"end":{"column":2,"line":6},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"}],"source":"import styled from \"@emotion/styled\";\n\nexport const MenuStyle = styled.div`\n  background:\"#eeeeee\",\n  padding: \"10px\"\n`;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/index.tsx":{"language":"typescript","mutants":[{"id":"42","location":{"end":{"column":2,"line":18},"start":{"column":37,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"43","location":{"end":{"column":31,"line":17},"start":{"column":15,"line":17}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"44","location":{"end":{"column":2,"line":23},"start":{"column":22,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"45","location":{"end":{"column":33,"line":33},"start":{"column":27,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { fork } from \"redux-saga/effects\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"@/App\";\nimport reducer from \"@store/reducers\";\nimport { loginSaga } from \"@auth/saga\";\nimport { grammarListSaga } from \"@grammar/List/saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer,\n  middleware: [sagaMiddleware],\n});\n\nfunction* rootSaga() {\n  yield fork(loginSaga);\n  yield fork(grammarListSaga);\n}\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/AdminApp.tsx":{"language":"typescript","mutants":[{"id":"46","location":{"end":{"column":2,"line":17},"start":{"column":49,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"47","location":{"end":{"column":4,"line":16},"start":{"column":10,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":4,"line":28},"start":{"column":12,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":51,"line":20},"start":{"column":9,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"50","location":{"end":{"column":51,"line":20},"start":{"column":9,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"51","location":{"end":{"column":51,"line":20},"start":{"column":9,"line":20}},"mutatorName":"EqualityOperator","replacement":"this.props.status !== CheckState.initiated","status":"Survived"},{"id":"52","location":{"end":{"column":6,"line":22},"start":{"column":53,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { CheckState } from \"@auth/types\";\nimport { AdminAppPresenter } from \"./AdminAppPresenter\";\nimport { reducerType } from \"@store/reducers\";\nimport { ErrorBoundary } from \"@components/ErrorBoundary\";\n\ninterface AdminAppProps {\n  status: CheckState;\n}\nconst mapStateToProps = (state: reducerType) => {\n  const { status } = state.auth;\n  return {\n    status,\n  };\n};\nexport class AdminApp extends Component<AdminAppProps> {\n  render() {\n    if (this.props.status === CheckState.initiated) {\n      return <Redirect to=\"/auth\" />;\n    }\n    return (\n      <ErrorBoundary>\n        <AdminAppPresenter />\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(AdminApp);\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/AdminAppPresenter.tsx":{"language":"typescript","mutants":[{"id":"53","location":{"end":{"column":2,"line":25},"start":{"column":44,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"@admin/Header/Header\";\nimport LeftMenuPresenter from \"./LeftMenu/LeftMenuPresenter\";\nimport { MainPage } from \"@components/Elements/elements\";\nimport List from \"./Grammar/List/List\";\n\nexport const AdminAppPresenter: FC = () => {\n  return (\n    <>\n      <Header />\n      <MainPage>\n        <BrowserRouter>\n          <LeftMenuPresenter />\n          <Switch>\n            <Route exact path=\"/admin/grammar\" component={List} />\n            <Route exact path=\"/admin/orphography\">\n              OrphographyList\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </MainPage>\n    </>\n  );\n};\nexport default AdminAppPresenter;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/List/List.tsx":{"language":"typescript","mutants":[{"id":"54","location":{"end":{"column":2,"line":20},"start":{"column":49,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":4,"line":19},"start":{"column":10,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":2,"line":24},"start":{"column":28,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":4,"line":29},"start":{"column":29,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"58","location":{"end":{"column":4,"line":32},"start":{"column":12,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { Component } from \"react\";\nimport Presenter from \"./Presenter\";\nimport { connect } from \"react-redux\";\nimport { setList } from \"./reducer\";\nimport { GrammarList, Loading } from \"./types\";\nimport { reducerType } from \"@store/reducers\";\n\ninterface GrammarListProps {\n  list: GrammarList;\n  setList: () => void;\n  loading: Loading;\n}\n\nconst mapStateToProps = (state: reducerType) => {\n  const { list, loading } = state.grammarList;\n  return {\n    list,\n    loading,\n  };\n};\n\nconst mapDispatchToProps = {\n  setList,\n};\n\nexport class List extends Component<GrammarListProps> {\n  async componentDidMount() {\n    await this.props.setList();\n  }\n  render() {\n    return <Presenter list={this.props.list} loading={this.props.loading} />;\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/List/Presenter.tsx":{"language":"typescript","mutants":[{"id":"59","location":{"end":{"column":2,"line":20},"start":{"column":56,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"60","location":{"end":{"column":10,"line":16},"start":{"column":25,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { Ul, Page } from \"@components/Elements/elements\";\nimport { GrammarList, Loading } from \"./types\";\n\ninterface ListProps {\n  list: GrammarList;\n  loading: Loading;\n}\n\nconst Presenter: FC<ListProps> = (props: ListProps) => {\n  return (\n    <Page loading={props.loading}>\n      <Ul>\n        {props.list.map((item) => (\n          <li key={item.id.toString()}>{item.name}</li>\n        ))}\n      </Ul>\n    </Page>\n  );\n};\n\nexport default Presenter;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/List/modules.tsx":{"language":"typescript","mutants":[{"id":"61","location":{"end":{"column":3,"line":12},"start":{"column":37,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"62","location":{"end":{"column":2,"line":12},"start":{"column":73,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"63","location":{"end":{"column":20,"line":7},"start":{"column":7,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"64","location":{"end":{"column":4,"line":10},"start":{"column":15,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"65","location":{"end":{"column":27,"line":11},"start":{"column":10,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { ISagaModule } from \"redux-dynamic-modules-saga\";\n\nimport { reducer } from \"./reducer\";\nimport { grammarListSaga } from \"./saga\";\n\nexport const getGrammarListModule = (): ISagaModule<typeof reducer> => ({\n  id: \"grammarList\",\n  reducerMap: {\n    login: reducer,\n  },\n  sagas: [grammarListSaga],\n});\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/functions.tsx":{"language":"typescript","mutants":[{"id":"40","location":{"end":{"column":73,"line":1},"start":{"column":22,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"41","location":{"end":{"column":72,"line":1},"start":{"column":49,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"export const sleep = (x: number) => new Promise((r) => setTimeout(r, x));\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/List/reducer.tsx":{"language":"typescript","mutants":[{"id":"67","location":{"end":{"column":11,"line":5},"start":{"column":9,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed","description":"Killed by: Gramar list reducer setList"},{"id":"68","location":{"end":{"column":46,"line":8},"start":{"column":37,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"69","location":{"end":{"column":2,"line":20},"start":{"column":45,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.tsx:63:33)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/saga.test.tsx:4:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.tsx:63:33)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.test.tsx:2:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34)"},{"id":"66","location":{"end":{"column":2,"line":7},"start":{"column":46,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Gramar list reducer setList"},{"id":"70","location":{"end":{"column":22,"line":10},"start":{"column":9,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.tsx:63:33)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/saga.test.tsx:4:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.tsx:63:33)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Admin/Grammar/List/reducer.test.tsx:2:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34)"},{"id":"71","location":{"end":{"column":4,"line":19},"start":{"column":13,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"72","location":{"end":{"column":6,"line":15},"start":{"column":64,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"73","location":{"end":{"column":41,"line":14},"start":{"column":14,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"74","location":{"end":{"column":6,"line":18},"start":{"column":65,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Gramar list reducer setLoading start"},{"id":"75","location":{"end":{"column":44,"line":17},"start":{"column":14,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"}],"source":"import { createSlice, PayloadAction, createAction } from \"@reduxjs/toolkit\";\nimport { GrammarListType, GrammarList, Loading } from \"./types\";\n\nexport const defaultState: GrammarListType = {\n  list: [],\n  loading: Loading.ok,\n};\nexport const setList = createAction(\"setList\");\nexport const grammarListSlice = createSlice({\n  name: \"grammarList\",\n  initialState: defaultState,\n  reducers: {\n    fetch: (state, { payload }: PayloadAction<GrammarList>) => {\n      return { ...state, list: payload };\n    },\n    setLoading: (state, { payload }: PayloadAction<Loading>) => {\n      return { ...state, loading: payload };\n    },\n  },\n});\nexport const { actions, reducer } = grammarListSlice;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/List/saga.tsx":{"language":"typescript","mutants":[{"id":"76","location":{"end":{"column":2,"line":15},"start":{"column":34,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"77","location":{"end":{"column":4,"line":12},"start":{"column":7,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"78","location":{"end":{"column":4,"line":14},"start":{"column":13,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Grammar setGramarList"},{"id":"79","location":{"end":{"column":2,"line":19},"start":{"column":36,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { takeEvery, put, call } from \"redux-saga/effects\";\n\nimport { grammarList } from \"@grammar/data\";\nimport { actions, setList } from \"./reducer\";\nimport { Loading } from \"./types\";\n\nexport function* setGramarList() {\n  try {\n    yield put(actions.setLoading(Loading.start));\n    const gl = yield call(grammarList);\n    yield put(actions.fetch(gl));\n  } finally {\n    yield put(actions.setLoading(Loading.ok));\n  }\n}\n\nexport function* grammarListSaga() {\n  yield takeEvery(setList, setGramarList);\n}\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Grammar/data.tsx":{"language":"typescript","mutants":[{"id":"80","location":{"end":{"column":2,"line":17},"start":{"column":30,"line":6}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"81","location":{"end":{"column":4,"line":11},"start":{"column":3,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"82","location":{"end":{"column":23,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"83","location":{"end":{"column":22,"line":10},"start":{"column":11,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"84","location":{"end":{"column":4,"line":16},"start":{"column":3,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":28,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ArithmeticOperator","replacement":"random.number() - 2","status":"Survived"},{"id":"86","location":{"end":{"column":2,"line":22},"start":{"column":37,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"87","location":{"end":{"column":34,"line":21},"start":{"column":20,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"88","location":{"end":{"column":25,"line":21},"start":{"column":21,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"89","location":{"end":{"column":33,"line":21},"start":{"column":27,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"90","location":{"end":{"column":2,"line":27},"start":{"column":52,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":43,"line":26},"start":{"column":20,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"92","location":{"end":{"column":43,"line":26},"start":{"column":30,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"93","location":{"end":{"column":43,"line":26},"start":{"column":30,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"94","location":{"end":{"column":43,"line":26},"start":{"column":30,"line":26}},"mutatorName":"EqualityOperator","replacement":"item.id != id","status":"Survived"},{"id":"95","location":{"end":{"column":2,"line":36},"start":{"column":69,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":72,"line":31},"start":{"column":49,"line":31}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"97","location":{"end":{"column":72,"line":31},"start":{"column":59,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"98","location":{"end":{"column":72,"line":31},"start":{"column":59,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"99","location":{"end":{"column":72,"line":31},"start":{"column":59,"line":31}},"mutatorName":"EqualityOperator","replacement":"item.id != id","status":"Survived"},{"id":"100","location":{"end":{"column":14,"line":32},"start":{"column":7,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"101","location":{"end":{"column":14,"line":32},"start":{"column":7,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"102","location":{"end":{"column":14,"line":32},"start":{"column":7,"line":32}},"mutatorName":"BooleanLiteral","replacement":"update","status":"Survived"},{"id":"103","location":{"end":{"column":28,"line":32},"start":{"column":23,"line":32}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"104","location":{"end":{"column":14,"line":35},"start":{"column":10,"line":35}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import * as R from \"ramda\";\nimport { random, name, lorem } from \"faker\";\nimport { grammar } from \"./types\";\nimport { sleep } from \"@/functions\";\n\nconst data: Array<grammar> = [\n  {\n    id: 1,\n    name: \"Страница 1\",\n    text: \"Контент 1\",\n  },\n  {\n    id: random.number() + 2,\n    name: name.title(),\n    text: lorem.sentence(),\n  },\n];\n\nexport async function grammarList() {\n  await sleep(1000);\n  return R.project([\"id\", \"name\"], data);\n}\n\nexport const grammarDetail = async (id: number) => {\n  await sleep(1000);\n  return data.find((item) => item.id == id);\n};\n\nexport async function updateDetail(id: number, updateData: grammar) {\n  await sleep(1000);\n  const update: grammar | undefined = data.find((item) => item.id == id);\n  if (!update) return false;\n  update.name = updateData.name;\n  update.text = updateData.text;\n  return true;\n}\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Header/Header.tsx":{"language":"typescript","mutants":[{"id":"105","location":{"end":{"column":2,"line":13},"start":{"column":57,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":2,"line":19},"start":{"column":42,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":4,"line":18},"start":{"column":10,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actions } from \"@auth/reducer\";\nimport { HeaderPresenter } from \"./HeaderPresenter\";\n\ninterface HeaderProps {\n  logout: () => void;\n}\n\nconst Header: FC<HeaderProps> = (props: HeaderProps) => {\n  return <HeaderPresenter logout={props.logout} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: bindActionCreators(actions.logout, dispatch),\n  };\n};\n\nexport default connect(undefined, mapDispatchToProps)(Header);\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Header/HeaderPresenter.stories.tsx":{"language":"typescript","mutants":[{"id":"108","location":{"end":{"column":2,"line":7},"start":{"column":16,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"109","location":{"end":{"column":17,"line":6},"start":{"column":10,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"110","location":{"end":{"column":2,"line":10},"start":{"column":43,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"111","location":{"end":{"column":50,"line":9},"start":{"column":42,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from \"react\";\nimport HeaderPresenter from \"./HeaderPresenter\";\nimport { action } from \"@storybook/addon-actions\";\n\nexport default {\n  title: \"Admin\",\n};\nexport const Header: React.FC<{}> = () => {\n  return <HeaderPresenter logout={action(\"logout\")} />;\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/Header/HeaderPresenter.tsx":{"language":"typescript","mutants":[{"id":"112","location":{"end":{"column":2,"line":14},"start":{"column":73,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\n\ninterface HeaderProps {\n  logout: () => void;\n}\n\nexport const HeaderPresenter: FC<HeaderProps> = (props: HeaderProps) => {\n  return (\n    <>\n      <button onClick={props.logout}> Выйти</button>\n      <hr />\n    </>\n  );\n};\nexport default HeaderPresenter;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/LeftMenu/LeftMenuPresenter.stories.tsx":{"language":"typescript","mutants":[{"id":"113","location":{"end":{"column":2,"line":6},"start":{"column":16,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":17,"line":5},"start":{"column":10,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"115","location":{"end":{"column":2,"line":13},"start":{"column":42,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React from \"react\";\nimport LeftMenu from \"./LeftMenuPresenter\";\nimport { BrowserRouter } from \"react-router-dom\";\nexport default {\n  title: \"Admin\",\n};\nexport const LeftMenu1: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <LeftMenu />\n    </BrowserRouter>\n  );\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Admin/LeftMenu/LeftMenuPresenter.tsx":{"language":"typescript","mutants":[{"id":"116","location":{"end":{"column":2,"line":17},"start":{"column":37,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React, { FC } from \"react\";\nimport { Ul, Menu, ListLink } from \"@components/Elements/elements\";\n\nconst LeftMenuPresenter: FC = () => {\n  return (\n    <Menu>\n      <Ul>\n        <li>\n          <ListLink to=\"/admin/grammar\">Грамматика</ListLink>\n        </li>\n        <li>\n          <ListLink to=\"/admin/orphography\">Орфография</ListLink>\n        </li>\n      </Ul>\n    </Menu>\n  );\n};\n\nexport default LeftMenuPresenter;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/AuthPage.tsx":{"language":"typescript","mutants":[{"id":"117","location":{"end":{"column":2,"line":21},"start":{"column":49,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":4,"line":20},"start":{"column":10,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"119","location":{"end":{"column":2,"line":25},"start":{"column":28,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":4,"line":31},"start":{"column":11,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"121","location":{"end":{"column":13,"line":29},"start":{"column":11,"line":29}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"123","location":{"end":{"column":4,"line":40},"start":{"column":36,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"122","location":{"end":{"column":17,"line":30},"start":{"column":15,"line":30}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"125","location":{"end":{"column":4,"line":60},"start":{"column":12,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"124","location":{"end":{"column":6,"line":39},"start":{"column":16,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"127","location":{"end":{"column":49,"line":43},"start":{"column":9,"line":43}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"126","location":{"end":{"column":49,"line":43},"start":{"column":9,"line":43}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"129","location":{"end":{"column":6,"line":45},"start":{"column":51,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"130","location":{"end":{"column":73,"line":52},"start":{"column":21,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"128","location":{"end":{"column":49,"line":43},"start":{"column":9,"line":43}},"mutatorName":"EqualityOperator","replacement":"this.props.status !== CheckState.succeed","status":"Survived"},{"id":"133","location":{"end":{"column":76,"line":55},"start":{"column":25,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"131","location":{"end":{"column":72,"line":52},"start":{"column":25,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"132","location":{"end":{"column":77,"line":55},"start":{"column":25,"line":54}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import React, { Component, FormEvent } from \"react\";\nimport AuthPagePresenter from \"./AuthPagePresenter\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"./reducer\";\nimport { CheckState, Login } from \"./types\";\nimport { reducerType } from \"@store/reducers\";\n\ninterface AuthProps {\n  user: string;\n  password: string;\n  auth: (d: Login) => void;\n  status: CheckState;\n}\n\nconst mapStateToProps = (state: reducerType) => {\n  const { status } = state.auth;\n  return {\n    status,\n  };\n};\n\nconst mapDispatchToProps = {\n  auth: actions.auth,\n};\n\nexport class AuthPage extends Component<AuthProps> {\n  state = {\n    user: \"\",\n    password: \"\",\n  };\n\n  submit = async (e: FormEvent) => {\n    e.preventDefault();\n    const { auth } = this.props;\n    await auth({\n      user: this.state.user,\n      password: this.state.password,\n    });\n  };\n\n  render() {\n    if (this.props.status === CheckState.succeed) {\n      return <Redirect to=\"/admin\" />;\n    }\n    return (\n      <AuthPagePresenter\n        user={this.state.user}\n        password={this.state.password}\n        status={this.props.status}\n        changeUser={(ev: React.FormEvent) =>\n          this.setState({ user: (ev.target as HTMLInputElement).value })\n        }\n        changePassword={(ev: React.FormEvent) =>\n          this.setState({ password: (ev.target as HTMLInputElement).value })\n        }\n        submit={this.submit}\n      />\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/AuthPagePresenter.stories.tsx":{"language":"typescript","mutants":[{"id":"135","location":{"end":{"column":16,"line":7},"start":{"column":10,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"134","location":{"end":{"column":2,"line":9},"start":{"column":16,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"136","location":{"end":{"column":26,"line":8},"start":{"column":15,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"137","location":{"end":{"column":2,"line":13},"start":{"column":23,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"138","location":{"end":{"column":2,"line":28},"start":{"column":37,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"139","location":{"end":{"column":27,"line":16},"start":{"column":21,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"140","location":{"end":{"column":31,"line":16},"start":{"column":29,"line":16}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"142","location":{"end":{"column":39,"line":17},"start":{"column":37,"line":17}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"141","location":{"end":{"column":35,"line":17},"start":{"column":25,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"143","location":{"end":{"column":32,"line":23},"start":{"column":26,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"144","location":{"end":{"column":40,"line":24},"start":{"column":30,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from \"react\";\nimport AuthPagePresenter from \"./AuthPagePresenter\";\nimport { action } from \"@storybook/addon-actions\";\nimport { withKnobs, text } from \"@storybook/addon-knobs\";\n\nexport default {\n  title: \"Auth\",\n  decorators: [withKnobs],\n};\n\nconst submit = (e) => {\n  e.preventDefault();\n};\n\nexport const Auth: React.FC = () => {\n  const user = text(\"user\", \"\");\n  const password = text(\"password\", \"\");\n  return (\n    <AuthPagePresenter\n      user={user}\n      status={0}\n      password={password}\n      changeUser={action(\"user\")}\n      changePassword={action(\"password\")}\n      submit={submit}\n    />\n  );\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/AuthPagePresenter.tsx":{"language":"typescript","mutants":[{"id":"145","location":{"end":{"column":2,"line":56},"start":{"column":64,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"146","location":{"end":{"column":10,"line":52},"start":{"column":17,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"147","location":{"end":{"column":49,"line":46},"start":{"column":15,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"148","location":{"end":{"column":49,"line":46},"start":{"column":15,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"149","location":{"end":{"column":49,"line":46},"start":{"column":15,"line":46}},"mutatorName":"EqualityOperator","replacement":"props.status !== CheckState.failed","status":"Survived"},{"id":"151","location":{"end":{"column":40,"line":47},"start":{"column":20,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":12,"line":48},"start":{"column":51,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"152","location":{"end":{"column":51,"line":49},"start":{"column":15,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"154","location":{"end":{"column":51,"line":49},"start":{"column":15,"line":49}},"mutatorName":"EqualityOperator","replacement":"props.status !== CheckState.zeroData","status":"Survived"},{"id":"153","location":{"end":{"column":51,"line":49},"start":{"column":15,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"155","location":{"end":{"column":12,"line":51},"start":{"column":53,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"156","location":{"end":{"column":35,"line":50},"start":{"column":20,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import {\n  Input,\n  Name,\n  Label,\n  Button,\n  Page,\n} from \"@components/Elements/elements.tsx\";\nimport React, { FC, FormEventHandler } from \"react\";\nimport { CheckState } from \"@auth/types\";\n\ninterface AuthProps {\n  submit: FormEventHandler;\n  changeUser: FormEventHandler;\n  changePassword: FormEventHandler;\n  user: string;\n  password: string;\n  status: CheckState;\n}\nconst AuthPagePresenter: FC<AuthProps> = (props: AuthProps) => {\n  return (\n    <Page>\n      <h1>Авторизация</h1>\n      <form action=\"\" onSubmit={props.submit}>\n        <Label>\n          <Name>Логин</Name>\n          <Input\n            onChange={props.changeUser}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"root\"\n            value={props.user}\n          />\n        </Label>\n        <Label>\n          <Name>Пароль</Name>\n          <Input\n            onChange={props.changePassword}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"root\"\n            value={props.password}\n          />\n        </Label>\n        <Button status={props.status}>Вход</Button>\n        {(() => {\n          if (props.status === CheckState.failed) {\n            return \"Ошибка авторизации\";\n          }\n          if (props.status === CheckState.zeroData) {\n            return \"Пустые данные\";\n          }\n        })()}\n      </form>\n    </Page>\n  );\n};\n\nexport default AuthPagePresenter;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/data.tsx":{"language":"typescript","mutants":[{"id":"157","location":{"end":{"column":2,"line":5},"start":{"column":21,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"158","location":{"end":{"column":15,"line":3},"start":{"column":9,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"159","location":{"end":{"column":19,"line":4},"start":{"column":13,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"162","location":{"end":{"column":56,"line":9},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"160","location":{"end":{"column":2,"line":10},"start":{"column":64,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"161","location":{"end":{"column":56,"line":9},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"163","location":{"end":{"column":56,"line":9},"start":{"column":10,"line":9}},"mutatorName":"LogicalOperator","replacement":"user == data.user || password == data.password","status":"Survived"},{"id":"165","location":{"end":{"column":27,"line":9},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"164","location":{"end":{"column":27,"line":9},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"167","location":{"end":{"column":56,"line":9},"start":{"column":31,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"168","location":{"end":{"column":56,"line":9},"start":{"column":31,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"166","location":{"end":{"column":27,"line":9},"start":{"column":10,"line":9}},"mutatorName":"EqualityOperator","replacement":"user != data.user","status":"Survived"},{"id":"171","location":{"end":{"column":33,"line":14},"start":{"column":27,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"170","location":{"end":{"column":2,"line":15},"start":{"column":35,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"169","location":{"end":{"column":56,"line":9},"start":{"column":31,"line":9}},"mutatorName":"EqualityOperator","replacement":"password != data.password","status":"Survived"},{"id":"172","location":{"end":{"column":2,"line":20},"start":{"column":41,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"173","location":{"end":{"column":52,"line":19},"start":{"column":10,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"174","location":{"end":{"column":52,"line":19},"start":{"column":10,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"175","location":{"end":{"column":52,"line":19},"start":{"column":10,"line":19}},"mutatorName":"EqualityOperator","replacement":"localStorage.getItem(\"auth\") !== data.user","status":"Survived"},{"id":"176","location":{"end":{"column":37,"line":19},"start":{"column":31,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { sleep } from \"@/functions\";\nexport const data = {\n  user: \"root\",\n  password: \"root\",\n};\nexport const login = async (user: string, password: string) => {\n  await sleep(200);\n\n  return user == data.user && password == data.password;\n};\n\nexport const logout = async () => {\n  await sleep(200);\n  localStorage.removeItem(\"auth\");\n};\n\nexport const isAuthorised = async () => {\n  await sleep(200);\n  return localStorage.getItem(\"auth\") === data.user;\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/modules.tsx":{"language":"typescript","mutants":[{"id":"177","location":{"end":{"column":3,"line":12},"start":{"column":31,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"178","location":{"end":{"column":2,"line":12},"start":{"column":67,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"179","location":{"end":{"column":14,"line":7},"start":{"column":7,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"180","location":{"end":{"column":4,"line":10},"start":{"column":15,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"181","location":{"end":{"column":21,"line":11},"start":{"column":10,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { ISagaModule } from \"redux-dynamic-modules-saga\";\n\nimport { reducer } from \"./reducer\";\nimport { loginSaga } from \"./saga\";\n\nexport const getLoginModule = (): ISagaModule<typeof reducer> => ({\n  id: \"login\",\n  reducerMap: {\n    login: reducer,\n  },\n  sagas: [loginSaga],\n});\nexport default getLoginModule;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/reducer.tsx":{"language":"typescript","mutants":[{"id":"182","location":{"end":{"column":2,"line":7},"start":{"column":35,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"183","location":{"end":{"column":11,"line":5},"start":{"column":9,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"184","location":{"end":{"column":2,"line":31},"start":{"column":38,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.tsx:62:26)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/saga.test.tsx:4:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.tsx:62:26)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.test.tsx:2:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34)"},{"id":"185","location":{"end":{"column":15,"line":9},"start":{"column":9,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.tsx:62:26)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/saga.test.tsx:4:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/@reduxjs/toolkit/src/createSlice.ts:216:11)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.tsx:62:26)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.requireModuleOrMock (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/.stryker-tmp/sandbox9434030/src/modules/Auth/reducer.test.tsx:2:1)\n    at Runtime._execModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:385:22)\n    at runTest (/Users/ruslanmuhametzanov/Documents/otus/React/hw14/node_modules/jest-runner/build/runTest.js:465:34)"},{"id":"186","location":{"end":{"column":4,"line":30},"start":{"column":13,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"187","location":{"end":{"column":6,"line":14},"start":{"column":63,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login reducer login password "},{"id":"188","location":{"end":{"column":74,"line":13},"start":{"column":14,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Login reducer login password "},{"id":"189","location":{"end":{"column":6,"line":17},"start":{"column":29,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"190","location":{"end":{"column":54,"line":16},"start":{"column":14,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Login reducer login"},{"id":"191","location":{"end":{"column":6,"line":20},"start":{"column":30,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"193","location":{"end":{"column":6,"line":23},"start":{"column":31,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login reducer loading"},{"id":"192","location":{"end":{"column":56,"line":19},"start":{"column":14,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan logout"},{"id":"195","location":{"end":{"column":6,"line":26},"start":{"column":30,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login reducer failed"},{"id":"196","location":{"end":{"column":53,"line":25},"start":{"column":14,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Login reducer failed"},{"id":"194","location":{"end":{"column":54,"line":22},"start":{"column":14,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"197","location":{"end":{"column":6,"line":29},"start":{"column":32,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"198","location":{"end":{"column":55,"line":28},"start":{"column":14,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Auth, Login, CheckState } from \"./types\";\n\nexport const defaultState: Auth = {\n  user: \"\",\n  status: CheckState.initiated,\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: defaultState,\n  reducers: {\n    auth: (state: Auth, { payload }: PayloadAction<Login>) => {\n      return { ...state, user: payload.user, status: CheckState.succeed };\n    },\n    login: (state: Auth) => {\n      return { ...state, status: CheckState.succeed };\n    },\n    logout: (state: Auth) => {\n      return { ...state, status: CheckState.initiated };\n    },\n    loading: (state: Auth) => {\n      return { ...state, status: CheckState.loading };\n    },\n    failed: (state: Auth) => {\n      return { ...state, status: CheckState.failed };\n    },\n    zeroData: (state: Auth) => {\n      return { ...state, status: CheckState.zeroData };\n    },\n  },\n});\n\nexport const { actions, reducer } = authSlice;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/saga.tsx":{"language":"typescript","mutants":[{"id":"199","location":{"end":{"column":2,"line":18},"start":{"column":37,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"200","location":{"end":{"column":11,"line":13},"start":{"column":7,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"201","location":{"end":{"column":11,"line":13},"start":{"column":7,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"202","location":{"end":{"column":4,"line":15},"start":{"column":13,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan checkUserSession"},{"id":"204","location":{"end":{"column":2,"line":38},"start":{"column":62,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"203","location":{"end":{"column":4,"line":17},"start":{"column":10,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"205","location":{"end":{"column":4,"line":35},"start":{"column":7,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"206","location":{"end":{"column":53,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"207","location":{"end":{"column":53,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"208","location":{"end":{"column":53,"line":24},"start":{"column":9,"line":24}},"mutatorName":"LogicalOperator","replacement":"user.trim() === \"\" && password.trim() === \"\"","status":"Survived"},{"id":"209","location":{"end":{"column":27,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"211","location":{"end":{"column":27,"line":24},"start":{"column":9,"line":24}},"mutatorName":"EqualityOperator","replacement":"user.trim() !== \"\"","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"210","location":{"end":{"column":27,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"212","location":{"end":{"column":27,"line":24},"start":{"column":25,"line":24}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"213","location":{"end":{"column":53,"line":24},"start":{"column":31,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"214","location":{"end":{"column":53,"line":24},"start":{"column":31,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"215","location":{"end":{"column":53,"line":24},"start":{"column":31,"line":24}},"mutatorName":"EqualityOperator","replacement":"password.trim() !== \"\"","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"216","location":{"end":{"column":53,"line":24},"start":{"column":51,"line":24}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"217","location":{"end":{"column":6,"line":27},"start":{"column":55,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"218","location":{"end":{"column":19,"line":26},"start":{"column":14,"line":26}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"219","location":{"end":{"column":16,"line":29},"start":{"column":9,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"220","location":{"end":{"column":16,"line":29},"start":{"column":9,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"221","location":{"end":{"column":6,"line":31},"start":{"column":18,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"222","location":{"end":{"column":65,"line":30},"start":{"column":17,"line":30}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed","description":"Killed by: redux saga test plan auth"},{"id":"223","location":{"end":{"column":6,"line":33},"start":{"column":12,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"224","location":{"end":{"column":4,"line":37},"start":{"column":19,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"225","location":{"end":{"column":2,"line":41},"start":{"column":27,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: redux saga test plan logout"},{"id":"226","location":{"end":{"column":57,"line":40},"start":{"column":13,"line":40}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed","description":"Killed by: redux saga test plan logout"},{"id":"227","location":{"end":{"column":2,"line":54},"start":{"column":30,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"228","location":{"end":{"column":14,"line":46},"start":{"column":10,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"229","location":{"end":{"column":14,"line":46},"start":{"column":10,"line":46}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"230","location":{"end":{"column":4,"line":53},"start":{"column":16,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"231","location":{"end":{"column":16,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"232","location":{"end":{"column":16,"line":49},"start":{"column":9,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"233","location":{"end":{"column":6,"line":52},"start":{"column":18,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { take, put, call, fork, all } from \"redux-saga/effects\";\n\nimport {\n  login as sessionLogin,\n  logout as sessionLogout,\n  isAuthorised,\n} from \"./session\";\nimport { login as serverLogin } from \"./data\";\nimport { actions } from \"./reducer\";\n\nexport function* checkUserSession() {\n  const auth: boolean = yield call(isAuthorised);\n  if (auth) {\n    yield put(actions.login());\n  } else {\n    yield put(actions.logout());\n  }\n}\n\nexport function* auth(data: ReturnType<typeof actions.auth>) {\n  try {\n    yield put(actions.loading());\n    const { user, password } = data.payload;\n    if (user.trim() === \"\" || password.trim() === \"\") {\n      yield put(actions.zeroData());\n      return false;\n    }\n    const logined: boolean = yield call(serverLogin, user, password);\n    if (logined) {\n      yield all([call(sessionLogin, user), put(actions.login())]);\n    } else {\n      yield put(actions.failed());\n    }\n    return logined;\n  } catch (error) {\n    yield put(actions.logout());\n  }\n}\nexport function* logout() {\n  yield all([call(sessionLogout), put(actions.logout())]);\n}\n\nexport function* loginSaga() {\n  yield fork(checkUserSession);\n  let logined, ath;\n  while (true) {\n    ath = yield take(actions.auth.type);\n    logined = yield* auth(ath);\n    if (logined) {\n      yield take(actions.logout.type);\n      yield* logout();\n    }\n  }\n}\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/modules/Auth/session.tsx":{"language":"typescript","mutants":[{"id":"234","location":{"end":{"column":2,"line":7},"start":{"column":46,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"236","location":{"end":{"column":2,"line":11},"start":{"column":35,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"235","location":{"end":{"column":30,"line":6},"start":{"column":24,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"237","location":{"end":{"column":33,"line":10},"start":{"column":27,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"238","location":{"end":{"column":2,"line":15},"start":{"column":41,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"239","location":{"end":{"column":52,"line":14},"start":{"column":10,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"240","location":{"end":{"column":52,"line":14},"start":{"column":10,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"241","location":{"end":{"column":52,"line":14},"start":{"column":10,"line":14}},"mutatorName":"EqualityOperator","replacement":"localStorage.getItem(\"auth\") !== data.user","status":"Survived"},{"id":"242","location":{"end":{"column":37,"line":14},"start":{"column":31,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { sleep } from \"@/functions\";\nimport { data } from \"./data\";\n\nexport const login = async (user: string) => {\n  await sleep(200);\n  localStorage.setItem(\"auth\", user);\n};\nexport const logout = async () => {\n  await sleep(200);\n  localStorage.removeItem(\"auth\");\n};\nexport const isAuthorised = async () => {\n  await sleep(200);\n  return localStorage.getItem(\"auth\") === data.user;\n};\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/Header.tsx":{"language":"typescript","mutants":[{"id":"243","location":{"end":{"column":2,"line":5},"start":{"column":21,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"244","location":{"end":{"column":18,"line":2},"start":{"column":12,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"245","location":{"end":{"column":18,"line":3},"start":{"column":12,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"246","location":{"end":{"column":33,"line":4},"start":{"column":17,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"247","location":{"end":{"column":2,"line":11},"start":{"column":16,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"const headerStyle = {\n  display: \"flex\",\n  padding: \"10px\",\n  borderBottom: \"1px solid #aaa\",\n};\n\nconst Header = () => (\n  <div className=\"Header\" style={headerStyle}>\n    HEADER\n  </div>\n);\n\nexport default Header;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/Layout.tsx":{"language":"typescript","mutants":[{"id":"248","location":{"end":{"column":2,"line":6},"start":{"column":23,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"249","location":{"end":{"column":17,"line":5},"start":{"column":10,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"251","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"250","location":{"end":{"column":2,"line":9},"start":{"column":14,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"252","location":{"end":{"column":2,"line":12},"start":{"column":19,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"253","location":{"end":{"column":20,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"254","location":{"end":{"column":2,"line":24},"start":{"column":16,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import Header from \"./Header\";\nimport NavBar from \"./NavBar\";\n\nconst leftMenuStyle = {\n  width: \"300px\",\n};\nconst page = {\n  display: \"flex\",\n};\nconst pageStyle = {\n  padding: \"0 20px\",\n};\n\nconst Layout = (props) => (\n  <div>\n    <Header />\n    <div style={page}>\n      <div style={leftMenuStyle}>\n        <NavBar />\n      </div>\n      <div style={pageStyle}>{props.children}</div>\n    </div>\n  </div>\n);\n\nexport default Layout;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/NavBar.tsx":{"language":"typescript","mutants":[{"id":"256","location":{"end":{"column":24,"line":3},"start":{"column":15,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"255","location":{"end":{"column":2,"line":5},"start":{"column":19,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"258","location":{"end":{"column":2,"line":21},"start":{"column":16,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"257","location":{"end":{"column":18,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import Link from \"next/link\";\nconst menuStyle = {\n  background: \"#eeeeee\",\n  padding: \"10px\",\n};\nconst NavBar = () => (\n  <div style={menuStyle}>\n    <ul>\n      <li>\n        <Link href=\"/grammar\">\n          <a>Грамматика</a>\n        </Link>\n      </li>\n      <li>\n        <Link href=\"/orphography\">\n          <a>Орфография</a>\n        </Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default NavBar;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/grammar/index.tsx":{"language":"typescript","mutants":[{"id":"259","location":{"end":{"column":2,"line":22},"start":{"column":39,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"260","location":{"end":{"column":12,"line":17},"start":{"column":40,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"262","location":{"end":{"column":4,"line":31},"start":{"column":18,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"261","location":{"end":{"column":2,"line":33},"start":{"column":44,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"263","location":{"end":{"column":30,"line":29},"start":{"column":11,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"265","location":{"end":{"column":63,"line":32},"start":{"column":19,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"264","location":{"end":{"column":65,"line":32},"start":{"column":10,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\nimport Layout from \"@pages/Layout\";\nimport { GrammarList } from \"@grammar/types\";\nimport { initializeStore } from \"@store/store\";\nimport { grammarList } from \"@grammar/data\";\n\nexport default  function grammar(data){\n  const { list } = data.initialReduxState;\n  return <Layout>\n    <h3>Грамматика</h3>\n    <hr/>\n    <div>\n      <ul>\n        {\n          list.map((item:GrammarList)=>{\n            return <li key={item.id.toString()}>{item.name}</li>;\n          })\n        }\n      </ul>\n    </div>\n  </Layout>;\n}\n\nexport async function getServerSideProps() {\n  const reduxStore = initializeStore();\n  const { dispatch } = reduxStore;\n  const gl = await grammarList();\n  await dispatch({\n    type: \"grammarList/fetch\",\n    payload: gl\n  });\n  return { props: { initialReduxState: reduxStore.getState() } }\n}"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/grammar/reducer.tsx":{"language":"typescript","mutants":[{"id":"266","location":{"end":{"column":2,"line":7},"start":{"column":46,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"267","location":{"end":{"column":11,"line":5},"start":{"column":9,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"268","location":{"end":{"column":17,"line":6},"start":{"column":12,"line":6}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"269","location":{"end":{"column":2,"line":20},"start":{"column":45,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"271","location":{"end":{"column":4,"line":19},"start":{"column":13,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"270","location":{"end":{"column":22,"line":9},"start":{"column":9,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"272","location":{"end":{"column":30,"line":12},"start":{"column":14,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"273","location":{"end":{"column":6,"line":15},"start":{"column":64,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"275","location":{"end":{"column":6,"line":18},"start":{"column":65,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"274","location":{"end":{"column":41,"line":14},"start":{"column":14,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"276","location":{"end":{"column":44,"line":17},"start":{"column":14,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { GrammarListType, GrammarList } from \"./types\";\n\nexport const defaultState: GrammarListType = {\n  list: [],\n  loading: false,\n};\nexport const grammarListSlice = createSlice({\n  name: \"grammarList\",\n  initialState: defaultState,\n  reducers: {\n    setList: (state) => state,\n    fetch: (state, { payload }: PayloadAction<GrammarList>) => {\n      return { ...state, list: payload };\n    },\n    setLoading: (state, { payload }: PayloadAction<boolean>) => {\n      return { ...state, loading: payload };\n    },\n  },\n});\nexport const { actions, reducer } = grammarListSlice;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/index.tsx":{"language":"typescript","mutants":[{"id":"277","location":{"end":{"column":45,"line":3},"start":{"column":15,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import Layout from \"./Layout\";\n\nconst Index = () => <Layout>Главная</Layout>;\n\nexport default Index;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/pages/orphography/index.tsx":{"language":"typescript","mutants":[{"id":"278","location":{"end":{"column":2,"line":7},"start":{"column":38,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\nimport Layout from \"@pages/Layout\";\nexport default function orphography(){\n  return <Layout>\n    <h3>Орфография</h3>\n    </Layout>;\n}"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/store/reducers.tsx":{"language":"typescript","mutants":[{"id":"279","location":{"end":{"column":4,"line":11},"start":{"column":3,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"281","location":{"end":{"column":2,"line":18},"start":{"column":40,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"280","location":{"end":{"column":39,"line":10},"start":{"column":17,"line":10}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { combineReducers } from \"redux\";\nimport { createStore } from \"redux-dynamic-modules\";\nimport { getSagaExtension } from \"redux-dynamic-modules-saga\";\nimport { reducer as authReducer } from \"@auth/reducer\";\nimport { reducer as grammarListReducer } from \"@grammar/List/reducer\";\nimport { getLoginModule } from \"@auth/modules\";\n\nexport const store = createStore(\n  {\n    extensions: [getSagaExtension({})],\n  },\n  getLoginModule()\n);\n\nexport const reducer = combineReducers({\n  grammarList: grammarListReducer,\n  auth: authReducer,\n});\n\nexport type reducerType = ReturnType<typeof reducer>;\nexport default reducer;\n"},"/Users/ruslanmuhametzanov/Documents/otus/React/hw14/src/store/store.tsx":{"language":"typescript","mutants":[{"id":"282","location":{"end":{"column":2,"line":12},"start":{"column":22,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"283","location":{"end":{"column":11,"line":11},"start":{"column":9,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"284","location":{"end":{"column":2,"line":26},"start":{"column":51,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"285","location":{"end":{"column":4,"line":19},"start":{"column":32,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"287","location":{"end":{"column":4,"line":23},"start":{"column":24,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"286","location":{"end":{"column":33,"line":18},"start":{"column":17,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"289","location":{"end":{"column":30,"line":30},"start":{"column":7,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"288","location":{"end":{"column":2,"line":40},"start":{"column":52,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"290","location":{"end":{"column":30,"line":30},"start":{"column":7,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"291","location":{"end":{"column":30,"line":30},"start":{"column":7,"line":30}},"mutatorName":"LogicalOperator","replacement":"preloadedState || store","status":"Survived"},{"id":"292","location":{"end":{"column":4,"line":36},"start":{"column":32,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"293","location":{"end":{"column":6,"line":34},"start":{"column":24,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"294","location":{"end":{"column":36,"line":37},"start":{"column":7,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"295","location":{"end":{"column":36,"line":37},"start":{"column":7,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"297","location":{"end":{"column":36,"line":37},"start":{"column":25,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":36,"line":37},"start":{"column":7,"line":37}},"mutatorName":"EqualityOperator","replacement":"typeof window !== \"undefined\"","status":"Survived"},{"id":"298","location":{"end":{"column":13,"line":38},"start":{"column":7,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"299","location":{"end":{"column":13,"line":38},"start":{"column":7,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"301","location":{"end":{"column":2,"line":45},"start":{"column":40,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"300","location":{"end":{"column":13,"line":38},"start":{"column":7,"line":38}},"mutatorName":"BooleanLiteral","replacement":"store","status":"Survived"},{"id":"302","location":{"end":{"column":60,"line":43},"start":{"column":25,"line":43}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"303","location":{"end":{"column":76,"line":43},"start":{"column":62,"line":43}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import { useMemo } from \"react\";\nimport { reducer } from \"@grammar/List/reducer\";\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fork } from \"redux-saga/effects\";\nimport { grammarListSaga } from \"@grammar/List/saga\";\n\nlet store;\nconst initialState = {\n  list: [],\n};\n\nfunction initStore(preloadedState = initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = configureStore({\n    reducer,\n    middleware: [sagaMiddleware],\n  });\n\n  function* rootSaga() {\n    yield fork(grammarListSaga);\n  }\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport const initializeStore = (preloadedState) => {\n  let _store = store ?? initStore(preloadedState);\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n    store = undefined;\n  }\n  if (typeof window === \"undefined\") return _store;\n  if (!store) store = _store;\n  return _store;\n};\n\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};